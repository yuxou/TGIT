package model.service;

import java.util.List;
import model.dao.FlightDAO;
import model.domain.Flight;

public class FlightManager {
    private FlightDAO flightDAO;

    // 생성자
    public FlightManager(FlightDAO flightDAO) {
        this.flightDAO = flightDAO;
    }

    /**
     * 새로운 비행 일정 추가
     * @param flight
     */
    public void addFlight(Flight flight) {
        try {
            flightDAO.addFlight(flight);
        } catch (Exception e) {
            e.printStackTrace();
            throw new RuntimeException("Failed to add flight");
        }
    }

    /**
     * 모든 비행 일정 조회
     * @return 비행 일정 리스트
     */
    public List<Flight> getAllFlights() {
        try {
            return flightDAO.getAllFlights();
        } catch (Exception e) {
            e.printStackTrace();
            throw new RuntimeException("Failed to retrieve flights");
        }
    }

    /**
     * 특정 비행 일정 조회
     * @param flightId
     * @return 비행 일정
     */
    public Flight getFlightById(int flightId) {
        try {
            return flightDAO.getFlightById(flightId);
        } catch (Exception e) {
            e.printStackTrace();
            throw new RuntimeException("Failed to retrieve flight by ID");
        }
    }

    /**
     * 비행 일정 업데이트
     * @param flightId
     * @param updatedFlight
     */
    public void updateFlight(int flightId, Flight updatedFlight) {
        try {
            Flight flight = flightDAO.getFlightById(flightId);
            if (flight != null) {
                flight.update(updatedFlight);
                flightDAO.updateFlight(flight);
            } else {
                throw new RuntimeException("Flight not found with ID: " + flightId);
            }
        } catch (Exception e) {
            e.printStackTrace();
            throw new RuntimeException("Failed to update flight");
        }
    }

    /**
     * 비행 일정 삭제
     * @param flightId
     */
    public void deleteFlight(int flightId) {
        try {
            flightDAO.deleteFlight(flightId);
        } catch (Exception e) {
            e.printStackTrace();
            throw new RuntimeException("Failed to delete flight");
        }
    }
}